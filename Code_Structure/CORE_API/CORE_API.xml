<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CORE_API</name>
    </assembly>
    <members>
        <member name="M:CORE_API.Helpers.CryptoHelper.Encrypt(System.String,System.String)">
            <summary>
            Step 1: Tạo public key từ private key lưu trong appsetting
            Step 2: Tạo key aes-256
            Step 3: Mã hoá: Response { k: string, d: string }
            Mã hóa data = AES256 với (aesKey, IV), sau đó thì d = IV + data
            Mã hóa k = RSA(aesKey)
            Step 4: Giải mã: làm ngược lại từ k để lấy aeskey + 16 byte đầu của d (IV), dùng AES(key,IV) để giải mã d từ byte thứ 16 trở đi, vì 16 byte đầu là IV
            ----
            </summary>
        </member>
        <member name="M:CORE_API.Helpers.CryptoHelper.AESEncrypt(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            AES encrypt
            </summary>
            <param name="data">Raw data</param>  
            <param name="key">Key, requires 32 bits</param>  
            <param name="vector">IV,requires 16 bits</param>  
            <returns>Encrypted byte array</returns>  
        </member>
        <member name="M:CORE_API.Middlewares.CryptoMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Sau khi server nhận được request có dạng { k: string, d: string }
            Giải mã request -> Controller logic -> mã hóa response
            Thuật toán:
                AES: Sử dụng AES Key và IV để mã hóa
                RSA: Sử dụng public key để mã hóa và private key để giải mã
            Cấu trúc mã hóa:
                {
                    k: Bên trong là AES Key; được mã hóa bằng public key của server -> sử dụng private key server để giải mã -> nhận được AES Key
                    d: Bên trong có { ClientPubKey,... } , được mã hóa bằng AES
                        d = Base64 (IV(16byte) + dataEncrypt(AES))
                    => Từ 'k' ta được AES Key và từ 'd' ta được IV
                    => Sử dụng AES Key + IV để giải mã dataEncrypt(AES) -> json request
                }
             Các bước mã hóa:
                Step 1: Ta có jsonResponse = { username: 'abc', password: 'xyz' }
                Step 2: Tạo ra ngẫu nhiên 2 key: AES Key(32byte) và IV(16byte)
                Step 3: Sử dụngAES(jsonResponse) để mã hóa jsonResponse -> jsonResponse = [24,21,52,32,...] byte array
                Step 4: Tạo ra d = Base64(IV(16byte) + jsonResponse(nByte)) -> jsonResponse = "qcvdgrhmh...==";
                Step 5: Tạo ra k = RSA(AES Key(32byte)) => sử dụng ClientPubKey để mã hóa, ClientPubKey lấy ở bước giải mã request
                Step 6: Trả về object bao gồm { k: string, d: string } cho client
             Các bước giải mã:
                Step 1: Dùng private Key được lưu sẵn trong appsetting để giải mã 'k' -> ta được AES Key (32byte)
                Step 2: Convert 'd' từ Base64 về byte[] -> gọi là dataDecoded
                Step 3: Lấy 16 byte đầu tiên từ dataDecoded ra làm IV(16byte)
                Step 4: Lấy phần còn lại của dataDecoded làm dataEncrypted
                Step 5: Sử dụng AES Key(32Byte) + IV(16byte) từ 1 và 3 để giải mã dataEncrypted; ta được jsonRequest = AESDecrypt(dataEncrypted)
            </summary>
            <param name="httpContext"></param>
            <returns></returns>
        </member>
        <member name="P:CORE_API.Middlewares.CryptoRequest.Data">
            <summary>
            Là mã hóa của AES, d = IV + AES(body)
            </summary>
        </member>
        <member name="P:CORE_API.Middlewares.CryptoRequest.Key">
            <summary>
            là mã hóa của thuật toán RSA, bên trong là AESKey, k = RSA(AESKey)
            </summary>
        </member>
        <member name="P:CORE_API.Middlewares.CryptoResponse.Data">
            <summary>
            Data
            </summary>
        </member>
        <member name="P:CORE_API.Middlewares.CryptoResponse.Key">
            <summary>
            Data
            </summary>
        </member>
    </members>
</doc>
